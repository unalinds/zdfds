https://www.youtube.com/watch?v=fRryHBD_Mko

insert button in C# Windows form application swit clog

adicionar imagem
(PANEL)

1)A tela deve ter as 4 funções de uma CRUD (CREATE, UPDATE  READ e DELETE).

2)Quando estiver selecionado algum registro no DataGridView, deve automaticamente ser carregadas as informações pertinentes ao cliente selecionado e ser fechado a tela de consulta.

3)Ao clicar na linha do datagridview deve ser carregado os dados do cliente nos campos text,combo e outros controles.

4)Caso seja, alterado alguma informação, deve ser salva no banco (UPDATE)

5)Deve ser criado um campo status, onde caso o cliente esteja inativo, deve colorir no datadridview a linha em vermelho, caso esteja ativo, colorir em azul.

6)Ao faltar o preenchimento de alguma informação, deve-se  setar o foco no campo correspondente. 


BANCO
/****** Script do comando SelectTopNRows de SSMS  ******/
SELECT TOP (1000) [code] INT(IDENTIDADE SIM)
      ,[name] STRING
      ,[addres] STRING
      ,[street] STRING
      ,[streetNumber] INT(TESTAR COM FLOAT)
      ,[cep] NUMERIC
      ,[state]STRING
      ,[cnpj]NUMERIC
      ,[ie]NUMERIC
      ,[cellNumber] NUMERIC
      ,[landlineNumber] NUMERIC
      ,[email] STRING
      ,[date] DATE
      ,[observation] STRING
      ,[image] IMAGE
  FROM [exProgramacao].[dbo].[Pjuridica]


PG INICIAL
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace WindowsFormsApplication1
{
    public partial class PgInicial : Form
    {
        public PgInicial()
        {
            InitializeComponent();
        }

        private void PessoaJuridica_Click(object sender, EventArgs e)
        {
            var Pjuridica = new Pjuridica();
            Pjuridica.Show();     
        }

        private void PessoaFisica_Click(object sender, EventArgs e)
        {
            var Pfisic = new Pfisic();
            Pfisic.Show();   
        }
    }
}
ARRUMAR INSERT, NUMERCS BACNO

PJURIDICA
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Text.RegularExpressions;
using System.Data.SqlClient;

namespace WindowsFormsApplication1
{
    public partial class Pjuridica : Form
    {
        public int emailJ;
        public int cnpJ;
        public string mensagem;
        public string ValidateCnpj;
        public string connetionString;
        public bool  novo;

        public Pjuridica()
        {
            InitializeComponent();
        }


        //SqlConnection comn = new SqlConnection(@"Data Source=CANCUN\SQLEXPRESS;Initial Catalog=exProgramacao;Persist Security Info=True;User ID=sa;Password=***********");

        SqlConnection comn = new SqlConnection(@"Data Source=CANCUN\SQLEXPRESS;Initial Catalog=exProgramacao;Persist Security Info=True;User ID=sa;Password=zx862");



        public void identify ()
        {
            string pattern = "^([0-9a-zA-Z]([-\\.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$";

            if(Regex.IsMatch(txtEmail.Text, pattern) ==  false)
            {
                if(txtEmail.Text.All(Char.IsWhiteSpace))
                {
                    emailJ = 1;
                    errorProvider7.Clear();
                }
                else
                {
                    emailJ = 0;
                    errorProvider7.SetError(this.txtEmail, "Insira outro email");
                    return;
                }

            }
        } 
 
        private void Tobservacao_Click(object sender, EventArgs e)
        {       }


        private void clean_Click(object sender, EventArgs e)
        {
            Pjuridica NewForm = new Pjuridica();
            NewForm.Show();
            this.Dispose(false);
        }

        private void save_Click(object sender, EventArgs e)
        {
            if (string.IsNullOrEmpty(txtName.Text.Trim()))
            {
                errorProvider1.SetError(txtName, "Insira um nome");
                return;
            }
            else
            {
                errorProvider1.SetError(txtName, string.Empty);
            }
            
            if (string.IsNullOrEmpty(txtAddres.Text.Trim()))
            {
                errorProvider2.SetError(txtAddres, "Insira um endereço");
                return;
            }
            else
            {
                errorProvider2.SetError(txtAddres, string.Empty);
            }
            
            if (string.IsNullOrEmpty(cbState.Text.Trim()))
            {
                errorProvider3.SetError(cbState, "Insira um estado");
                return;
            }
            else
            {
                errorProvider3.SetError(cbState, string.Empty);
            }
           
            if (string.IsNullOrEmpty(txtCity.Text.Trim()))
            {
                errorProvider4.SetError(txtCity, "Insira uma cidade");
                return;
            }
            else
            {
                errorProvider4.SetError(txtCity, string.Empty);
            }
           
            if (string.IsNullOrEmpty(mskCnpj.Text.Trim()))
            {
                errorProvider5.SetError(mskCnpj, "Insira um cnpj");
                return;
            }
            else
            {
                errorProvider5.SetError(mskCnpj, string.Empty);
            }
            
            if (string.IsNullOrEmpty(mskDate.Text.Trim()))
            {
                errorProvider6.SetError(mskDate, "Insira uma data");
                return;
            }
            else
            {
                errorProvider6.SetError(mskDate, string.Empty);
            }

           string valor = mskCnpj.Text;
           if (ValidateCNPJ.ValidadateCNPJ.IsCnpj(valor))
           {
               cnpJ = 1;
               errorProvider8.Clear();
           }
           else
           {
               errorProvider8.SetError(mskCnpj, "Insira um cnpj valido");
               return;
           }

          try
            {
                comn.Open();
                string query = "INSERT INTO Pjuridica(name, addres, street, streetNumber, cep, state, cnpj, ie, cellNumber, landlineNumber, email, date, observation) VALUES('" + txtName + "','" + txtAddres + "','" + txtStreet + "','" + txtStreetNumber + "','" + mskCep + "','" + cbState + "','" + mskCnpj + "','" + mskIe + "','" + mskCellNumber + "','" + mskLandlineNumber + "','" + txtEmail + "','" + mskDate + "','" + txtObservation + "')";
                SqlDataAdapter SDA = new SqlDataAdapter(query, comn);
                SDA.SelectCommand.ExecuteNonQuery();
                MessageBox.Show("certo");  
            }
            catch(Exception ex)
            {
                MessageBox.Show("Error" + ex);
            }
            finally
            {
                comn.Close();
            }          

            identify( );

            btnReturn.Enabled = true;

            MessageBox.Show(mensagem, "Registro incluído com sucesso!"); 
        }

              private void cnpJ_CheckedChanged(object sender, EventArgs e)
              {
                 mskCnpj.Text = "";
                 mskCnpj.Mask = "00,000,000/0000-00";
                 mskCnpj.MaskInputRejected += new MaskInputRejectedEventHandler(cnpj_MaskInputRejected);
              }

        private void cnpj_MaskInputRejected(object sender, MaskInputRejectedEventArgs e)
        {  }
       private void Tcity_Click(object sender, EventArgs e)
        {  }
        private void Tname_Click(object sender, EventArgs e)
        {  }
        private void Taddres_Click(object sender, EventArgs e)
        {  }
        private void Tstreet_Click(object sender, EventArgs e)
        {  }
        private void Vpjuridica_Click(object sender, EventArgs e)
        {
            var PgInicial = new PgInicial();
            PgInicial.Show();           
        }
        private void TstreetNumber_Click(object sender, EventArgs e)
        {  }
        private void Pjuridica_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'exProgramacaoDataSet.Pjuridica' table. You can move, or remove it, as needed.
            this.pjuridicaTableAdapter.Fill(this.exProgramacaoDataSet.Pjuridica);
            btnReturn.Enabled = false;         
        }
        private void landlineNumber_MaskInputRejected(object sender, MaskInputRejectedEventArgs e)
        {  }
        private void pjuridicaBindingNavigatorSaveItem_Click(object sender, EventArgs e)
        {
            this.Validate();
            this.pjuridicaBindingSource.EndEdit();
            this.tableAdapterManager.UpdateAll(this.exProgramacaoDataSet);
        }

        private void email_TextChanged(object sender, EventArgs e)
        {  }
        private void textBox1_TextChanged(object sender, EventArgs e)
        {  }
        private void observation_TextChanged(object sender, EventArgs e)
        {  }
        public static DataTable DataSource 
        { 
            get; set; 
        }

        private void pjuridicaDataGridView_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {  }

        private void btnCreat_Click(object sender, EventArgs e)
        {  }


        private void btnDelete_Click(object sender, EventArgs e)
        {  }

        private void btnUpdate_Click(object sender, EventArgs e)
        {  }

        private void txtStreetNumber_TextChanged(KeyPressEventArgs e)
        {
            
        }
        private void txtStreet_TextChanged(object sender, EventArgs e)
        {  }


        private void txtStreetNumber_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!char.IsDigit(e.KeyChar))
            {
                e.Handled = true;
                MessageBox.Show("este campo aceita somente numero");
            }
        }


        public int StreerNumber { get; set; }
    }
}
 
