1)O campo código deve ser único.--auto increment
2)A tela deve ter as 4 funções de uma CRUD (CREATE, UPDATE  READ e DELETE).
3)Quando estiver selecionado algum registro no DataGridView, deve automaticamente ser carregadas as informações pertinentes ao cliente selecionado e ser fechado a tela de consulta.
4)Ao clicar na linha do datagridview deve ser carregado os dados do cliente nos campos text,combo e outros controles.
5)Caso seja, alterado alguma informação, deve ser salva no banco (UPDATE)
6)Deve ser criado um campo status, onde caso o cliente esteja inativo, deve colorir no datadridview a linha em vermelho, caso esteja ativo, colorir em azul.



using System;

namespace ValidateCNPJ
{
    /// <summary>
    /// Realiza a validação do CNPJ
    /// </summary>
    public static class ValidadateCNPJ
    {
        public static bool IsCnpj(string cnpj)
        {
            int[] multiplicador1 = new int[12] { 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2 };
            int[] multiplicador2 = new int[13] { 6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2 };
            int soma;
            int resto;
            string digito;
            string tempCnpj;

            cnpj = cnpj.Trim();
            cnpj = cnpj.Replace(".", "").Replace("-", "");

            if (cnpj.Length != 14)
                return false;

            tempCnpj = cnpj.Substring(0, 12);
            soma = 0;
            for (int i = 0; i < 12; i++)
                soma += int.Parse(tempCnpj[i].ToString()) * multiplicador1[i];

            resto = (soma % 11);
            if (resto < 2)
                resto = 0;
            else
                resto = 11 - resto;

            digito = resto.ToString();
            tempCnpj = tempCnpj + digito;

            soma = 0;
            for (int i = 0; i < 13; i++)
                soma += int.Parse(tempCnpj[i].ToString()) * multiplicador2[i];

            resto = (soma % 11);
            if (resto < 2)
                resto = 0;
            else
                resto = 11 - resto;

            tempCnpj = tempCnpj + resto;

            return cnpj.EndsWith(digito);
        }
    }
}










using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Text.RegularExpressions;
using System.Data.SqlClient;

namespace WindowsFormsApplication1
{
    public partial class Pjuridica : Form
    {
        public int emailJ;
        public int cnpJ;
        public string mensagem;
        public string ValidateCnpj;

        public Pjuridica()
        {
            InitializeComponent();
        }

        SqlConnection conn = new SqlConnection(@"Data Source=CANCUN\SQLEXPRESS;Initial Catalog=exProgramacao;Integrated Security=True");
       
        public void identify ()
        {         
                 string pattern = "^([0-9a-zA-Z]([-\\.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$";


                 if (Regex.IsMatch(email.Text, pattern) == false)
                 {
                     if (email.Text.All(Char.IsWhiteSpace))
                     {
                         emailJ = 1;
                         errorProvider7.Clear();
                     }
                     else
                     {
                         emailJ = 0;
                         errorProvider7.SetError(this.email, "Insira outro email");
                     }
                 }

                 else
                 {
                     emailJ = 1;
                     errorProvider7.Clear();
                 }
        }
 
        private void Tobservacao_Click(object sender, EventArgs e)
        {

        }

        private void clean_Click(object sender, EventArgs e)
        {
            Pjuridica NewForm = new Pjuridica();
            NewForm.Show();
            this.Dispose(false);
        }

        private void save_Click(object sender, EventArgs e)
        {
            if (string.IsNullOrEmpty(name.Text.Trim()))
            {
                errorProvider1.SetError(name, "Insira um nome");
                return;
            }
            else
            {
                errorProvider1.SetError(name, string.Empty);
            }


            if (string.IsNullOrEmpty(addres.Text.Trim()))
            {
                errorProvider2.SetError(addres, "Insira um endereço");
                return;
            }
            else
            {
                errorProvider2.SetError(addres, string.Empty);
            }


            if (string.IsNullOrEmpty(state.Text.Trim()))
            {
                errorProvider3.SetError(state, "Insira um estado");
                return;
            }
            else
            {
                errorProvider3.SetError(state, string.Empty);
            }


            if (string.IsNullOrEmpty(city.Text.Trim()))
            {
                errorProvider4.SetError(city, "Insira uma cidade");
                return;
            }
            else
            {
                errorProvider4.SetError(city, string.Empty);
            }



            if (string.IsNullOrEmpty(cnpj.Text.Trim()))
            {
                errorProvider5.SetError(cnpj, "Insira um cnpj");
                return;
            }
            else
            {
                errorProvider5.SetError(cnpj, string.Empty);
            }


            if (string.IsNullOrEmpty(date.Text.Trim()))
            {
                errorProvider6.SetError(date, "Insira uma data");
                return;
            }
            else
            {
                errorProvider6.SetError(date, string.Empty);
            }

             string valor = cnpj.Text;
            if (ValidateCNPJ.ValidadateCNPJ.IsCnpj(valor))
            {
                cnpJ = 1;
                errorProvider8.Clear();
            }
            else
            {
                  errorProvider8.SetError(cnpj, "Insira um cnpj valido");
            }


            identify();

            MessageBox.Show(mensagem, "Registro incluído com sucesso!");

            Vpjuridica.Enabled = true;
            
        }

              private void cnpJ_CheckedChanged(object sender, EventArgs e)
             {
              cnpj.Text = "";
              cnpj.Mask = "00,000,000/0000-00";
              cnpj.MaskInputRejected += new MaskInputRejectedEventHandler(cnpj_MaskInputRejected);
              }

        private void cnpj_MaskInputRejected(object sender, MaskInputRejectedEventArgs e)
        {
        
        }


        private void Tcity_Click(object sender, EventArgs e)
        {

        }

        private void Tname_Click(object sender, EventArgs e)
        {

        }

        private void Taddres_Click(object sender, EventArgs e)
        {

        }

        private void Tstreet_Click(object sender, EventArgs e)
        {

        }

        private void Vpjuridica_Click(object sender, EventArgs e)
        {
            var PgInicial = new PgInicial();
            PgInicial.Show();
        }

        private void TstreetNumber_Click(object sender, EventArgs e)
        {

        }

        private void Pjuridica_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'exProgramacaoDataSet.Pjuridica' table. You can move, or remove it, as needed.
            this.pjuridicaTableAdapter.Fill(this.exProgramacaoDataSet.Pjuridica);
            Vpjuridica.Enabled = false;
        }

        private void landlineNumber_MaskInputRejected(object sender, MaskInputRejectedEventArgs e)
        {

        }

        private void pjuridicaBindingNavigatorSaveItem_Click(object sender, EventArgs e)
        {
            this.Validate();
            this.pjuridicaBindingSource.EndEdit();
            this.tableAdapterManager.UpdateAll(this.exProgramacaoDataSet);

        }

        private void email_TextChanged(object sender, EventArgs e)
        {

        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {

        }

        private void observation_TextChanged(object sender, EventArgs e)
        {

        }
    }
}















